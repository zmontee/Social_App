{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Home/Profile/Profile.module.css","assets/images/icon.png","redux/types.js","api/api.js","redux/actions/userAction.js","components/Signup/Signup.jsx","components/Login/Login.jsx","utils/MyButton.jsx","redux/actions/dataAction.js","components/common/PostScream.jsx","redux/actions/uiAction.js","components/common/Notifications.jsx","components/Navbar/Navbar.jsx","components/common/EditDetails.jsx","components/Home/Profile/Profile.jsx","components/common/DeleteScream.jsx","components/common/Comment.jsx","components/common/ScreamDialog.jsx","components/Home/ScreamsItem/ScreamsItem.jsx","components/Home/Home.jsx","components/Home/HomeContainer.jsx","components/common/AuthRoute.jsx","redux/reducers/dataReducer.js","redux/reducers/userReducer.js","redux/reducers/uiReducer.js","redux/store.js","components/Home/Profile/StaticProfile.jsx","components/User/User.jsx","App.js","reportWebVitals.js","index.js","components/Home/ScreamsItem/ScreamsItem.module.css","components/Home/Home.module.css"],"names":["module","exports","SET_AUTHENTICATED","SET_UNAUTHENTICATED","SET_USER","LOADING_USER","SET_CURRENT_SCREAM","MARK_NOTIFICATIONS_READ","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","SET_SCREAMS","LOADING_DATA","LIKE_SCREAM","UNLIKE_SCREAM","dataAPI","axios","get","screamId","body","post","userAPI","photoFile","formData","FormData","append","name","userDetails","userHandle","notificationIds","logoutUser","dispatch","localStorage","removeItem","defaults","headers","common","type","getUserData","then","res","payload","data","catch","err","console","log","setAuthorizationData","token","FBIdToken","setItem","Signup","handleSubmit","event","preventDefault","newUserData","email","state","password","confirmPassword","handle","props","signupUser","history","handleChange","setState","target","value","this","classes","ui","loading","errors","Grid","container","className","form","item","sm","src","AppIcon","alt","appIcon","Typography","variant","pageTitle","noValidate","onSubmit","TextField","id","label","textField","helperText","error","onChange","fullWidth","general","customError","Button","color","submitButton","disabled","CircularProgress","size","progress","to","React","Component","connect","user","push","response","withStyles","textAlign","width","margin","marginTop","position","fontSize","Login","userData","loginUser","children","onClick","title","btnClassName","tipClassName","Tooltip","IconButton","getScreams","getScreamDetails","PostScream","handleOpen","open","handleClose","setError","length","newScreamBody","postNewScream","MyButton","style","Dialog","onClose","maxWidth","DialogTitle","DialogContent","placeholder","DialogActions","Notifications","anchorEl","onMenuOpen","unreadNotificationIds","notifications","filter","not","read","map","notificationId","markNotificationsRead","notificationIcon","dayjs","relativeTime","Badge","badgeContent","notificationsMarkUp","verb","time","createdAt","fromNow","iconColor","icon","marginRight","MenuItem","component","Link","recipient","sender","placement","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","authenticated","AppBar","Toolbar","s","content","EditDetails","bio","website","location","mapUserDetailsToState","credentials","editUserDetails","profileButton","maxWidh","Profile","handleImageChange","image","files","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","Paper","paper","imageWrapper","profileImage","hidden","profileDetails","LocationOn","href","ref","a","CalendarToday","format","align","buttons","mapDispatchToProps","file","padding","marginLeft","height","objectFit","borderRadius","verticalAlign","hr","border","cursor","display","DeleteScream","deleteScream","delete","comment","userImage","userImgWrapper","dialogContentBody","screamDialogBody","splitLine","backgroundColor","ScreamDialog","oldPath","window","pathname","newPath","pushState","commentBody","screamLoading","commentOnScream","openDialog","likeButton","likeCount","comments","c","reverse","screamDialog","dialogClose","dialogContent","scream","screamBtns","commentForm","commentBtn","currentScream","right","ScreamsItem","likedScream","likes","find","like","likeScream","unlikeScream","extend","commentCount","fullScream","deleteButton","Card","card","CardMedia","userImg","CardContent","screamBody","Home","screamsElements","screams","spacing","xs","profile","HomeContainer","rest","render","initialState","userReducer","action","forEach","uiReducer","reducers","combineReducers","index","findIndex","store","createStore","compose","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","StaticProfile","User","screamIdParam","match","params","theme","createMuiTheme","palette","primary","main","contrastText","jwtDecode","exp","Date","now","baseURL","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3dc37f99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Navbar_content__3Ui8U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"Profile_paper__3wfrK\",\"imageWrapper\":\"Profile_imageWrapper__3aZDD\",\"profileImage\":\"Profile_profileImage__1Fknj\",\"profileDetails\":\"Profile_profileDetails__aHGyd\",\"profileButton\":\"Profile_profileButton__1Q8vr\",\"button\":\"Profile_button__3hfUE\",\"buttons\":\"Profile_buttons__1fMED\",\"a\":\"Profile_a__3kmYf\",\"progress\":\"Profile_progress__3_kjh\"};","export default __webpack_public_path__ + \"static/media/icon.bdbf36a0.png\";","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const UPLOAD_IMAGE = 'UPLOAD_IMAGE';\r\nexport const SET_CURRENT_SCREAM = 'SET_CURRENT_SCREAM';\r\nexport const CLEAR_CURRENT_SCREAM = 'CLEAR_CURRENT_SCREAM';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\n","import axios from 'axios';\r\n/*\r\nconst instance = axios.create({\r\n    headers: {\r\n        apiKey: 'AIzaSyDZro_Ko--n8eY19bDYpM7lQ1Eql0lSwnQ\"'\r\n    }\r\n})*/\r\n\r\nexport const dataAPI = {\r\n    getAllScreams() {\r\n        return axios.get('/screams');\r\n    },\r\n    like(screamId) {\r\n        return axios.get(`/scream/${screamId}/like`);\r\n    },\r\n    unlike(screamId) {\r\n        return axios.get(`/scream/${screamId}/unlike`);\r\n    },\r\n    delete(screamId) {\r\n        return axios.delete(`/scream/${screamId}`);\r\n    },\r\n    postNewScream(body) {\r\n        return axios.post(`/scream`, body);\r\n    },\r\n    getScream(screamId) {\r\n        return axios.get(`/scream/${screamId}`);\r\n    },\r\n    commentOnScream(screamId, body) {\r\n        return axios.post(`/scream/${screamId}/comment`, body);\r\n    }\r\n}\r\n\r\nexport const userAPI = {\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile, photoFile.name);\r\n        return axios.post('/user/image', formData);\r\n    },\r\n    editUserDetails(userDetails) {\r\n        return axios.post('/user', userDetails);\r\n    },\r\n    getUserData(userHandle) {\r\n        return axios.get(`/user/${userHandle}`);\r\n    },\r\n    markNotificationsRead(notificationIds) {\r\n        return axios.post(`/notifications`, notificationIds);\r\n    }\r\n}","import axios from \"axios\";\r\nimport {\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    LOADING_USER, MARK_NOTIFICATIONS_READ,\r\n    SET_ERRORS,\r\n    SET_UNAUTHENTICATED,\r\n    SET_USER\r\n} from \"../types\";\r\nimport {userAPI} from \"../../api/api\";\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n        .then(res => {\r\n            setAuthorizationData(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({type: CLEAR_ERRORS});\r\n            history.push('/social_app/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/signup', newUserData)\r\n        .then(res => {\r\n            setAuthorizationData(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({type: CLEAR_ERRORS});\r\n            history.push('/social_app/');\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        });\r\n}\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get(`/user`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const setAuthorizationData = token => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n}\r\n\r\nexport const uploadImage = (file) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    userAPI.savePhoto(file)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({type: LOADING_USER});\r\n    userAPI.editUserDetails(userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const markNotificationsRead = (notificationIds) => (dispatch) => {\r\n    userAPI.markNotificationsRead(notificationIds)\r\n        .then(() => {\r\n            dispatch({\r\n                type: MARK_NOTIFICATIONS_READ\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Typography, TextField, Button, CircularProgress } from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\"\r\nimport AppIcon from \"../../assets/images/icon.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser, signupUser} from \"../../redux/actions/userAction\";\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: \"center\"\r\n    },\r\n    appIcon: {\r\n        width: 100,\r\n        margin: '20 auto 20 auto'\r\n    },\r\n    pageTitle: {\r\n        marginTop: 25\r\n    },\r\n    textField: {\r\n        margin: '10 auto 10 auto'\r\n    },\r\n    submitButton: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n    },\r\n    customError: {\r\n        marginTop: 20,\r\n        color: \"red\",\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n}\r\n\r\nclass Signup extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes, ui: { loading, errors } } = this.props;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"app icon\" className={classes.appIcon}/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Signup\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id=\"email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   label=\"Email\"\r\n                                   className={classes.textField}\r\n                                   helperText={errors.email}\r\n                                   error={errors.email ? true : false}\r\n                                   value={this.state.email}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        <TextField className={classes.textField}\r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   type=\"password\"\r\n                                   label=\"Password\"\r\n                                   helperText={errors.password}\r\n                                   error={errors.password ? true : false}\r\n                                   value={this.state.password}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        <TextField className={classes.textField}\r\n                                   id=\"confirmPassword\"\r\n                                   name=\"confirmPassword\"\r\n                                   type=\"password\"\r\n                                   label=\"Confirm Password\"\r\n                                   helperText={errors.confirmPassword}\r\n                                   error={errors.password ? true : false}\r\n                                   value={this.state.confirmPassword}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        <TextField className={classes.textField}\r\n                                   id=\"handle\"\r\n                                   name=\"handle\"\r\n                                   type=\"text\"\r\n                                   label=\"Handle\"\r\n                                   helperText={errors.handle}\r\n                                   error={errors.handle ? true : false}\r\n                                   value={this.state.handle}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\"\r\n                                        className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submitButton}\r\n                                disabled={loading}\r\n                        >\r\n                            Signup\r\n                            {loading && <CircularProgress size={30} className={classes.progress}/>}\r\n                        </Button>\r\n                    </form>\r\n                    <small>already have an account? login <Link to=\"/social_app/login\">here</Link></small>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    ui: state.ui\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    signupUser,\r\n    logoutUser\r\n})(withStyles(styles)(Signup));","import React from 'react';\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Typography, TextField, Button, CircularProgress } from \"@material-ui/core\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\"\r\nimport AppIcon from \"../../assets/images/icon.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginUser} from \"../../redux/actions/userAction\";\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: \"center\"\r\n    },\r\n    appIcon: {\r\n        width: 100,\r\n        margin: '20 auto'\r\n    },\r\n    pageTitle: {\r\n        marginTop: 25\r\n    },\r\n    textField: {\r\n        margin: '10 auto'\r\n    },\r\n    submitButton: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n    },\r\n    customError: {\r\n        marginTop: 20,\r\n        color: \"red\",\r\n        fontSize: \"0.8rem\"\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n}\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        this.props.loginUser(userData, this.props.history);\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //destructuring\r\n        const { classes, ui: {loading, errors} } = this.props;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt=\"app icon\" className={classes.appIcon}/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        Login\r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField id=\"email\"\r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   label=\"Email\"\r\n                                   className={classes.textField}\r\n                                   helperText={errors.email}\r\n                                   error={errors.email ? true : false}\r\n                                   value={this.state.email}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        <TextField className={classes.textField}\r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   type=\"password\"\r\n                                   label=\"Password\"\r\n                                   helperText={errors.password}\r\n                                   error={errors.password ? true : false}\r\n                                   value={this.state.password}\r\n                                   onChange={this.handleChange}\r\n                                   fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\"\r\n                                        className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submitButton}\r\n                                disabled={loading}\r\n                        >\r\n                            Login\r\n                            {loading && <CircularProgress size={30} className={classes.progress}/>}\r\n                        </Button>\r\n                    </form>\r\n                    <small>dont have an account? sign up <Link to=\"/social_app/signup\">here</Link></small>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        ui: state.ui\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    loginUser\r\n})(withStyles(styles)(Login));","import React from 'react';\r\nimport {IconButton, Tooltip} from \"@material-ui/core\";\r\n\r\nexport default ({children, onClick, title, btnClassName, tipClassName}) => {\r\n    return (<Tooltip title={title} className={tipClassName}>\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>)\r\n}","import {dataAPI, userAPI} from \"../../api/api\";\r\nimport {\r\n    CLEAR_ERRORS,\r\n    LIKE_SCREAM,\r\n    LOADING_DATA,\r\n    LOADING_UI, SET_CURRENT_SCREAM,\r\n    SET_ERRORS,\r\n    SET_SCREAMS,\r\n    UNLIKE_SCREAM\r\n} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getScreams = () =>  (dispatch) => {\r\n    dispatch({ type: LOADING_UI});\r\n    dataAPI.getAllScreams()\r\n        .then(res => {\r\n            dispatch({type: SET_SCREAMS, payload: res.data});\r\n            dispatch({type: CLEAR_ERRORS});\r\n        })\r\n}\r\n\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    dataAPI.like(screamId)\r\n        .then(res => {\r\n            dispatch({\r\n                type: LIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n    dataAPI.unlike(screamId)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNLIKE_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`)\r\n        .then(() => {\r\n            dispatch(getScreams());\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const postNewScream = (body) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    dataAPI.postNewScream(body)\r\n        .then(() => {\r\n            dispatch(getScreams());\r\n            dispatch({type: CLEAR_ERRORS});\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SET_ERRORS, payload: err.response.data});\r\n        })\r\n}\r\n\r\nexport const getScreamDetails = (screamId) => (dispatch) => {\r\n    dispatch({type: LOADING_DATA, loading: true});\r\n    dataAPI.getScream(screamId)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_CURRENT_SCREAM,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\nexport const commentOnScream = (screamId, body) => (dispatch) => {\r\n    dataAPI.commentOnScream(screamId, body)\r\n        .then(() => {\r\n            dispatch(getScreamDetails(screamId));\r\n            dispatch({type: CLEAR_ERRORS});\r\n        })\r\n        .catch(err => {\r\n            dispatch({type: SET_ERRORS, payload: err.response.data});\r\n        })\r\n}\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({type: LOADING_UI});\r\n    userAPI.getUserData(userHandle)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data.screams\r\n            })\r\n            dispatch({type: CLEAR_ERRORS})\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: null\r\n            })\r\n        })\r\n}","import React from 'react';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MyButton from \"../../utils/MyButton\";\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {postNewScream} from \"../../redux/actions/dataAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {setError} from \"../../redux/actions/uiAction\";\r\n\r\nclass PostScream extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            body: ''\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            body: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if(this.state.body === '') {\r\n            this.props.setError({body: \"Must not be empty\"})\r\n        } else if (this.state.body.length > 200) {\r\n            this.props.setError({body: \"Too long\"})\r\n        } else {\r\n            const newScreamBody = {\r\n                body: this.state.body\r\n            };\r\n            this.props.postNewScream(newScreamBody);\r\n            this.setState({\r\n                body: ''\r\n            })\r\n            this.handleClose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {ui:{errors}} = this.props;\r\n        return (\r\n            <>\r\n                <MyButton title=\"Post new scream\" onClick={this.handleOpen}>\r\n                    <AddIcon style={{ color: '#fff' }}/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        fullWidth\r\n                        maxWidth='sm'\r\n                >\r\n                    <DialogTitle>Post a new scream</DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField name='body'\r\n                                       label='Scream'\r\n                                       type='text'\r\n                                       fullWidth\r\n                                       placeholder='New scream body'\r\n                                       helperText={errors.body}\r\n                                       error={errors.body ? true : false}\r\n                                       value={this.state.body}\r\n                                       onChange={this.handleChange}\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleSubmit} color='primary'>\r\n                            Post\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ui: state.ui\r\n})\r\n\r\nexport default connect(mapStateToProps, {postNewScream, setError})(PostScream);","import {SET_ERRORS} from \"../types\";\r\n\r\nexport const setError = (error) => (dispatch) => {\r\n    dispatch({type: SET_ERRORS, payload: error})\r\n}","import React from 'react';\r\nimport {markNotificationsRead} from \"../../redux/actions/userAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Badge, IconButton, Menu, MenuItem, Tooltip, Typography} from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport * as dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport LikeIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Notifications extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    handleOpen = event => {\r\n        this.setState({\r\n            anchorEl: event.target\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null\r\n        })\r\n    }\r\n\r\n    onMenuOpen = () => {\r\n        let unreadNotificationIds = this.props.notifications\r\n            .filter(not => !not.read)\r\n            .map(not => not.notificationId);\r\n\r\n        this.props.markNotificationsRead(unreadNotificationIds);\r\n    }\r\n\r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n\r\n        let notificationIcon;\r\n        if(notifications && notifications.length > 0){\r\n            notifications.filter(not => not.read === false).length > 0\r\n                ? notificationIcon = (\r\n                    <Badge badgeContent={notifications.filter(not => not.read === false).length}\r\n                           color={\"secondary\"}\r\n                    >\r\n                        <NotificationsIcon style={{ color: '#FFFFFF' }}/>\r\n                    </Badge>\r\n                ) : (\r\n                    notificationIcon = <NotificationsIcon style={{ color: '#FFFFFF' }}/>\r\n                )\r\n        } else {\r\n            notificationIcon = <NotificationsIcon style={{ color: '#FFFFFF' }}/>\r\n        }\r\n        let notificationsMarkUp =\r\n            notifications && notifications.length > 0 ? (\r\n                notifications.map(not => {\r\n                    const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n                    const time = dayjs(not.createdAt).fromNow();\r\n                    const iconColor = not.read ? 'primary' : 'secondary';\r\n                    const icon = not.type === 'like' ? (\r\n                        <LikeIcon color={iconColor} style={{ marginRight: 10 }}/>\r\n                    ) : (\r\n                        <CommentIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                    )\r\n\r\n                    return (\r\n                        <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                            <Typography component={Link}\r\n                                        variant=\"body1\"\r\n                                        to={`/social_app/user/${not.recipient}/scream/${not.screamId}`}\r\n                            >\r\n                                {icon} {not.sender} {verb} your scream {time}\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    )\r\n                })\r\n            ) : (\r\n                <MenuItem onClick={this.handleClose}>\r\n                    You have no notifications yet\r\n                </MenuItem>\r\n            )\r\n        return (\r\n            <>\r\n                <Tooltip placement=\"top\" title=\"Notifications\">\r\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleOpen}\r\n                                >\r\n                        {notificationIcon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleClose}\r\n                    onEntered={this.onMenuOpen}\r\n                >\r\n                    {notificationsMarkUp}\r\n                </Menu>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    notifications: state.user.notifications\r\n})\r\n\r\nexport default connect(mapStateToProps, {markNotificationsRead})(Notifications);","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MyButton from \"../../utils/MyButton\";\r\nimport PostScream from \"../common/PostScream\";\r\nimport Notifications from \"../common/Notifications\";\r\n\r\n\r\nconst Navbar = props => {\r\n    const { user:{authenticated} } = props;\r\n    return (\r\n        <div>\r\n            img\r\n            <AppBar>\r\n                <Toolbar className={s.content}>\r\n                    {authenticated ?\r\n                        <>\r\n                            {<PostScream />}\r\n                            <Link to='/social_app/'>\r\n                                <MyButton title=\"Home\">\r\n                                    <HomeIcon style={{ color: '#fff' }}/>\r\n                                </MyButton>\r\n                            </Link>\r\n                            <Notifications/>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Button color='inherit' component={Link} to='/social_app/'>Home</Button>\r\n                            <Button color='inherit' component={Link} to='/social_app/login'>Login</Button>\r\n                            <Button color='inherit' component={Link} to='/social_app/signup'>Signup</Button>\r\n                        </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {connect} from \"react-redux\";\r\nimport {editUserDetails} from \"../../redux/actions/userAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport s from \"../Home/Profile/Profile.module.css\";\r\n\r\nclass EditDetails extends React.Component {\r\n    state = {\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n        open: false\r\n    }\r\n\r\n    mapUserDetailsToState = credentials => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : '',\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        }\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <>\r\n                <Button className={s.profileButton}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleOpen}\r\n                >\r\n                    Edit profile info\r\n                </Button>\r\n            <Dialog open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidh='sm'\r\n            >\r\n                <DialogTitle>Edit your profile info</DialogTitle>\r\n                <DialogContent>\r\n                    <form>\r\n                        <TextField\r\n                            name=\"bio\"\r\n                            label=\"Bio\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            placeholder='A short bio about yourself'\r\n                            value={this.state.bio}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"website\"\r\n                            label=\"Website\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            placeholder='Your personal/professional website'\r\n                            value={this.state.website}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"location\"\r\n                            label=\"Location\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            placeholder='Where you live'\r\n                            value={this.state.location}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleSubmit} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    editUserDetails\r\n})(EditDetails);","import React, { Fragment } from 'react';\r\n/*import s from './Profile.module.css';*/\r\nimport {connect} from \"react-redux\";\r\nimport { Paper, Typography} from \"@material-ui/core\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {LocationOn, CalendarToday} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport dayjs from \"dayjs\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {logoutUser, uploadImage} from \"../../../redux/actions/userAction\";\r\nimport EditDetails from \"../../common/EditDetails\";\r\nimport MyButton from \"../../../utils/MyButton\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding: 20\r\n    },\r\n    imageWrapper: {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        marginLeft: 50\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    profileDetails: {\r\n        textAlign: 'center'\r\n    },\r\n    'span, svg': {\r\n        verticalAlign: 'middle'\r\n    },\r\n    hr: {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n    },\r\n    'svg.button:hover': {\r\n        cursor: 'pointer'\r\n    },\r\n    profileButton: {\r\n        display: 'block',\r\n        margin: '0 auto',\r\n        marginTop: '20px'\r\n    },\r\n    buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n            margin: '20px 10px'\r\n        }\r\n    },\r\n    progress: {\r\n        margin: '0 auto'\r\n    }\r\n}\r\n\r\nclass Profile extends React.Component {\r\n    handleImageChange = event => {\r\n        const image = event.target.files[0];\r\n        this.props.uploadImage(image);\r\n    }\r\n\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById(\"imageInput\");\r\n        fileInput.click();\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            user: {\r\n                authenticated,\r\n                credentials: { handle, createdAt, imageUrl, bio, website, location}\r\n            }\r\n        } = this.props;\r\n\r\n        let ProfileMarkup = authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div>\r\n                    <div className={classes.imageWrapper}>\r\n                        <img src={imageUrl} alt=\"profile\" className={classes.profileImage}/>\r\n                        <input type=\"file\"\r\n                               id=\"imageInput\"\r\n                               hidden=\"hidden\"\r\n                               onChange={this.handleImageChange}\r\n                        />\r\n                        <MyButton title=\"Edit profile picture\"\r\n                                  onClick={this.handleEditPicture}>\r\n                            <EditIcon color=\"primary\"/>\r\n                        </MyButton>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className={classes.profileDetails}>\r\n                        <MuiLink component={Link}\r\n                                 to={`/social_app/user/${handle}`}\r\n                                 color=\"primary\"\r\n                                 variant=\"h5\"\r\n                        >\r\n                            @{handle}\r\n                        </MuiLink>\r\n                        <hr/>\r\n                        {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                        <hr/>\r\n                        {location && (\r\n                            <Fragment>\r\n                                <LocationOn color=\"primary\"/>\r\n                                <span>{location}</span>\r\n                            </Fragment>\r\n                        )}\r\n                        <hr/>\r\n                        {website && (\r\n                            <Fragment>\r\n                                <LinkIcon color=\"primary\"/>\r\n                                <a href={website}\r\n                                   target=\"_blank\"\r\n                                   ref=\"noopener noreferrer\"\r\n                                   className={classes.a}\r\n                                >\r\n                                    {website}\r\n                                </a>\r\n                            </Fragment>\r\n                        )}\r\n                        <hr/>\r\n                        <CalendarToday color=\"primary\"/>{' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                    </div>\r\n\r\n                    <EditDetails/>\r\n                        <Button className={classes.profileButton}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={this.handleLogout}\r\n                        >\r\n                            Logout\r\n                        </Button>\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"body2\"\r\n                            align=\"center\"\r\n                >\r\n                    No profile found, please login or signup.\r\n                    <div className={classes.buttons}>\r\n                        <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={Link}\r\n                                to=\"/social_app/login\"\r\n                                className={classes.a}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Button variant=\"contained\"\r\n                                component={Link}\r\n                                to=\"/social_app/signup\"\r\n                                className={classes.a}\r\n                        >\r\n                            Signup\r\n                        </Button>\r\n                    </div>\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n\r\n        return (\r\n            ProfileMarkup\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user,\r\n    ui: state.ui\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    uploadImage,\r\n    logoutUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Profile));","import React from 'react';\r\nimport MyButton from \"../../utils/MyButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteScream} from \"../../redux/actions/dataAction\";\r\nimport {Button, Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\n\r\nclass DeleteScream extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyButton title=\"Delete\" onClick={this.handleOpen}>\r\n                    <DeleteIcon color=\"secondary\"/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        fullWidth\r\n                        maxWidth='sm'\r\n                >\r\n                    <DialogTitle>Do you want to delete your scream?</DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.deleteScream} color=\"secondary\">\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {\r\n    deleteScream\r\n})(DeleteScream);","import React from 'react';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = {\r\n    comment: {\r\n        marginTop: 10,\r\n        display: 'flex'\r\n    },\r\n    userImage: {\r\n        width: 120,\r\n        height: 120,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    userImgWrapper: {\r\n        width: 120\r\n    },\r\n    dialogContentBody: {\r\n        marginLeft: 25\r\n    },\r\n    screamDialogBody: {\r\n        width: 300\r\n    },\r\n    splitLine: {\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        marginTop: 5,\r\n        height: 2,\r\n        backgroundColor: '#E4E6E7'\r\n    }\r\n}\r\n\r\nconst Comment = props => {\r\n    const {classes, userImage, userHandle, createdAt, body} = props;\r\n    return (\r\n        <>\r\n            <div className={classes.splitLine}></div>\r\n            <div className={classes.comment}>\r\n                <div className={classes.userImgWrapper}>\r\n                    <img src={userImage} className={classes.userImage} alt='User image'/>\r\n                </div>\r\n                <div className={classes.dialogContentBody}>\r\n                    <Typography variant=\"h5\"\r\n                                component={Link}\r\n                                to={`/social_app/users/${userHandle}`}\r\n                                color=\"primary\">\r\n                        @{userHandle}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\"\r\n                                color=\"textSecondary\">\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\"\r\n                                className={classes.screamDialogBody}\r\n                    >\r\n                        {body}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Comment);","import React from 'react';\r\nimport MyButton from \"../../utils/MyButton\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogContent,\r\n    Typography, TextField, CircularProgress\r\n} from \"@material-ui/core\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport {connect} from \"react-redux\";\r\nimport {commentOnScream, getScreamDetails} from \"../../redux/actions/dataAction\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst styles = {\r\n    screamDialog: {\r\n        position: 'relative'\r\n    },\r\n    dialogClose: {\r\n        position: 'absolute',\r\n        width: 50,\r\n        right: 30\r\n    },\r\n    userImage: {\r\n        width: 150,\r\n        height: 150,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    userImgWrapper: {\r\n        width: 150\r\n    },\r\n    scream: {\r\n        display: 'flex'\r\n    },\r\n    comments: {\r\n        marginLeft: 50\r\n    },\r\n    dialogContentBody: {\r\n        marginLeft: 25\r\n    },\r\n    screamDialogBody: {\r\n        width: 350\r\n    },\r\n    splitLine: {\r\n        width: '100%',\r\n        margin: '0 auto',\r\n        marginTop: 5,\r\n        height: 2,\r\n        backgroundColor: '#E4E6E7'\r\n    },\r\n    commentBtn: {\r\n        marginTop: 15,\r\n        marginLeft: '80%'\r\n    },\r\n    commentForm: {\r\n        marginTop: 10\r\n    },\r\n    progress: {\r\n        marginLeft: '45%'\r\n    }\r\n}\r\n\r\nclass ScreamDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            commentBody: '',\r\n            oldPath: '',\r\n            newPath: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.openDialog) {\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const { userHandle, screamId } = this.props;\r\n        const newPath = `/social_app/user/${userHandle}/scream/${screamId}`;\r\n\r\n        if(oldPath === newPath) oldPath = `/social_app/user/${userHandle}`;\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.props.getScreamDetails(this.props.screamId);\r\n        this.setState({\r\n            open: true,\r\n            oldPath,\r\n            newPath\r\n        })\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n\r\n        this.setState({\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            commentBody: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        this.setState({\r\n            screamLoading: true\r\n        });\r\n        if (this.state.commentBody.length > 200) {\r\n            this.props.setError({comment: \"Too long\"})\r\n        } else {\r\n            const newScreamBody = {\r\n                body: this.state.commentBody\r\n            };\r\n            this.props.commentOnScream(this.props.screamId, newScreamBody);\r\n            this.setState({\r\n                commentBody: '',\r\n                screamLoading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            classes, userImage, userHandle, createdAt, body,\r\n            likeButton, likeCount, loading, authenticated, ui: {errors}\r\n        } = this.props;\r\n\r\n        const comments = this.props.comments.map(c => <Comment userImage={c.userImage}\r\n                                                               userHandle={c.userHandle}\r\n                                                               createdAt={c.createdAt}\r\n                                                               body={c.body}\r\n        />).reverse();\r\n\r\n        return (\r\n            <>\r\n                <MyButton title=\"Comments\" onClick={this.handleOpen}>\r\n                    <CommentIcon color=\"primary\"/>\r\n                </MyButton>\r\n                <Dialog open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        fullWidth\r\n                        maxWidth='sm'\r\n                        className={classes.screamDialog}\r\n                >\r\n                    <MyButton title=\"Close\" onClick={this.handleClose} tipClassName={classes.dialogClose}>\r\n                        <CloseIcon/>\r\n                    </MyButton>\r\n                    <>\r\n                        <DialogContent className={classes.dialogContent}>\r\n                            <div className={classes.scream}>\r\n                                <div className={classes.userImgWrapper}>\r\n                                    <img src={userImage} className={classes.userImage} alt=\"User image\"/>\r\n                                </div>\r\n                                <div className={classes.dialogContentBody}>\r\n                                    <Typography variant=\"h5\"\r\n                                                component={Link}\r\n                                                to={`/social_app/user/${userHandle}`}\r\n                                                color=\"primary\">\r\n                                        @{userHandle}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\"\r\n                                                color=\"textSecondary\">\r\n                                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\"\r\n                                                className={classes.screamDialogBody}\r\n                                    >\r\n                                        {body}\r\n                                    </Typography>\r\n                                    <div className={classes.screamBtns}>\r\n                                        {likeButton}\r\n                                        <span color=\"primary\">{likeCount} Likes</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {loading ? (\r\n                                <CircularProgress className={classes.progress}/>\r\n                            ) : (\r\n                                <div className={classes.comments}>\r\n                                    {comments}\r\n                                    <div className={classes.splitLine}></div>\r\n                                    {authenticated ?\r\n                                        (<>\r\n                                            <form className={classes.commentForm}>\r\n                                                <TextField name='body'\r\n                                                           label='Comment on scream'\r\n                                                           type='text'\r\n                                                           fullWidth\r\n                                                           placeholder='Comment'\r\n                                                           helperText={errors.comment}\r\n                                                           error={errors.comment ? true : false}\r\n                                                           value={this.state.commentBody}\r\n                                                           onChange={this.handleChange}\r\n                                                />\r\n                                                <Button onClick={this.handleSubmit}\r\n                                                        color='primary'\r\n                                                        className={classes.commentBtn}\r\n                                                        variant=\"contained\"\r\n                                                >\r\n                                                    Post\r\n                                                </Button>\r\n                                            </form>\r\n                                        </>)\r\n                                        :\r\n                                        null}\r\n                                </div>\r\n                            )}\r\n                        </DialogContent>\r\n                    </>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    comments: state.data.currentScream.comments,\r\n    loading: state.data.loading,\r\n    ui: state.ui,\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, {getScreamDetails, commentOnScream})(withStyles(styles)(ScreamDialog));","import React from 'react';\r\nimport s from './ScreamsItem.module.css';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport MyButton from \"../../../utils/MyButton\";\r\nimport LikeIcon from '@material-ui/icons/ThumbUpAlt';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {likeScream, unlikeScream} from \"../../../redux/actions/dataAction\";\r\nimport DeleteScream from \"../../common/DeleteScream\";\r\nimport ScreamDialog from \"../../common/ScreamDialog\";\r\n\r\nclass ScreamsItem extends React.Component {\r\n\r\n    likedScream = () => {\r\n        if(this.props.user.likes && this.props.user.likes.find(\r\n            like => like.screamId === this.props.scream.screamId\r\n        ))  {\r\n            return true;\r\n        } else return false;\r\n    };\r\n\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.scream.screamId);\r\n    }\r\n\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.scream.screamId);\r\n    }\r\n\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n\r\n        const {\r\n            scream:{ screamId, userImage, userHandle, createdAt, body, likeCount, commentCount },\r\n            user:{ authenticated, credentials: {handle} },\r\n        } = this.props;\r\n\r\n        const likeButton = !authenticated ? (\r\n            <MyButton title='Like'>\r\n                <Link to='/social_app/login'>\r\n                    <LikeIcon />\r\n                </Link>\r\n            </MyButton>\r\n            ) : (\r\n                this.likedScream() ? (\r\n                    <MyButton title='Unlike' onClick={this.unlikeScream}>\r\n                        <LikeIcon color=\"primary\"/>\r\n                    </MyButton>\r\n                ) : (\r\n                    <MyButton title='Like' onClick={this.likeScream}>\r\n                        <LikeIcon />\r\n                    </MyButton>\r\n                )\r\n            )\r\n\r\n        const fullScream = (\r\n            <ScreamDialog userImage={userImage}\r\n                          screamId={screamId}\r\n                          userHandle={userHandle}\r\n                          createdAt={createdAt}\r\n                          body={body}\r\n                          likeCount={likeCount}\r\n                          commentCount={commentCount}\r\n                          likeScream={this.likedScream}\r\n                          unlikeScream={this.unlikeScream}\r\n                          likeButton={likeButton}\r\n                          screamId={screamId}\r\n                          openDialog={this.props.openDialog}\r\n            />\r\n        )\r\n\r\n        const deleteButton = authenticated && handle === userHandle ?\r\n            (<DeleteScream screamId={screamId}/>) : null;\r\n\r\n        return (\r\n            <Card className={s.card}>\r\n                <CardMedia\r\n                    image={userImage}\r\n                    title=\"Profile image\"\r\n                    className={s.userImg}\r\n                />\r\n                <CardContent className={s.content}>\r\n                    <Typography variant=\"h5\"\r\n                                component={Link}\r\n                                to={`/social_app/user/${userHandle}`}\r\n                                color=\"primary\">\r\n                        {userHandle}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\"\r\n                                color=\"textSecondary\">\r\n                        {dayjs(createdAt).fromNow()}\r\n                    </Typography>\r\n                    <div className={s.screamBody}>\r\n                        <Typography variant=\"body1\">\r\n                            {body}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={s.screamBtns}>\r\n                        {likeButton}\r\n                        <span color=\"primary\">{likeCount} Likes</span>\r\n                        {fullScream}\r\n                        <span color=\"primary\">{commentCount} Comments</span>\r\n                    </div>\r\n                    <div className={s.delete}>\r\n                        {deleteButton}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    likeScream,\r\n    unlikeScream,\r\n})(ScreamsItem);","import React from 'react';\r\nimport {CircularProgress, Grid} from \"@material-ui/core\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport s from \"./Home.module.css\";\r\nimport ScreamsItem from \"./ScreamsItem/ScreamsItem\";\r\n\r\nconst Home = props => {\r\n    const screamsElements = props.screams.map(scream => <ScreamsItem\r\n        key={scream.screamId}\r\n        scream={scream}\r\n    />)\r\n\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {props.loading ? <CircularProgress size={100} className={s.progress}/>\r\n            :\r\n            (<>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsElements}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12} className={s.profile}>\r\n                    <Profile />\r\n                </Grid>\r\n            </>)\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport Home from \"./Home\";\r\nimport {connect} from \"react-redux\";\r\nimport {getScreams} from \"../../redux/actions/dataAction\";\r\n\r\nclass HomeContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getScreams();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Home\r\n                    screams={this.props.data.screams}\r\n                    loading={this.props.ui.loading}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.data,\r\n        ui: state.ui\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getScreams: getScreams,\r\n})(HomeContainer);\r\n\r\n","import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AuthRoute = ({component: Component, authenticated, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                authenticated === true ? <Redirect to='/social_app/'/> : <Component {...props}/>}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.user.authenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import {\r\n    LIKE_SCREAM,\r\n    LOADING_DATA,\r\n    SET_CURRENT_SCREAM,\r\n    SET_SCREAMS,\r\n    UNLIKE_SCREAM\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    screams: [],\r\n    currentScream: {\r\n        comments: []\r\n    },\r\n    loading: false,\r\n}\r\n\r\nexport const dataReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_CURRENT_SCREAM:\r\n            return {\r\n                ...state,\r\n                currentScream: action.payload,\r\n                loading: false\r\n            }\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\r\n            state.screams[index] = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SET_AUTHENTICATED,\r\n    SET_UNAUTHENTICATED,\r\n    SET_USER,\r\n    LOADING_USER,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM, MARK_NOTIFICATIONS_READ\r\n} from \"../types\";\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n            }\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            }\r\n        case LOADING_USER: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        case LIKE_SCREAM: {\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        case UNLIKE_SCREAM: {\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                    like => like.screamId !== action.payload.screamId\r\n                )\r\n            }\r\n        }\r\n        case MARK_NOTIFICATIONS_READ: {\r\n            state.notifications.forEach(not => {\r\n                not.read = true\r\n            })\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {CLEAR_ERRORS, LOADING_UI, SET_ERRORS} from \"../types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: {},\r\n}\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: {}\r\n            }\r\n        case LOADING_UI: {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default uiReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {dataReducer} from \"./reducers/dataReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport uiReducer from \"./reducers/uiReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n    user: userReducer,\r\n    ui: uiReducer\r\n})\r\n\r\nconst store = createStore(reducers,\r\n    compose(applyMiddleware(thunkMiddleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Fragment} from 'react';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Paper, Typography} from \"@material-ui/core\";\r\nimport {CalendarToday, LocationOn} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst styles = {\r\n    paper: {\r\n        padding: 20\r\n    },\r\n    imageWrapper: {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n    },\r\n    profileImage: {\r\n        width: 200,\r\n        height: 200,\r\n        objectFit: 'cover',\r\n        maxWidth: '100%',\r\n        borderRadius: '50%'\r\n    },\r\n    profileDetails: {\r\n        textAlign: 'center'\r\n    },\r\n    'span, svg': {\r\n        verticalAlign: 'middle'\r\n    },\r\n    hr: {\r\n        border: 'none',\r\n        margin: '0 0 10px 0'\r\n    },\r\n    profileButton: {\r\n        display: 'block',\r\n        margin: '0 auto',\r\n        marginTop: '20px'\r\n    },\r\n    progress: {\r\n        margin: '0 auto'\r\n    }\r\n}\r\n\r\nclass StaticProfile extends React.Component {\r\n    render() {\r\n        const {classes, profile:{handle, imageUrl, bio, location, website, createdAt}\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Paper className={classes.paper}>\r\n                    <div>\r\n                        <div className={classes.imageWrapper}>\r\n                            <img src={imageUrl} alt=\"profile\" className={classes.profileImage}/>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className={classes.profileDetails}>\r\n                            <MuiLink component={Link}\r\n                                     to={`/social_app/users/${handle}`}\r\n                                     color=\"primary\"\r\n                                     variant=\"h5\"\r\n                            >\r\n                                @{handle}\r\n                            </MuiLink>\r\n                            <hr/>\r\n                            {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n                            <hr/>\r\n                            {location && (\r\n                                <Fragment>\r\n                                    <LocationOn color=\"primary\"/>\r\n                                    <span>{location}</span>\r\n                                </Fragment>\r\n                            )}\r\n                            <hr/>\r\n                            {website && (\r\n                                <Fragment>\r\n                                    <LinkIcon color=\"primary\"/>\r\n                                    <a href={website}\r\n                                       target=\"_blank\"\r\n                                       ref=\"noopener noreferrer\"\r\n                                       className={classes.a}\r\n                                    >\r\n                                        {website}\r\n                                    </a>\r\n                                </Fragment>\r\n                            )}\r\n                            <hr/>\r\n                            <CalendarToday color=\"primary\"/>{' '}\r\n                            <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getUserData} from \"../../redux/actions/dataAction\";\r\nimport {CircularProgress, Grid} from \"@material-ui/core\";\r\nimport s from \"../Home/Home.module.css\";\r\nimport StaticProfile from \"../Home/Profile/StaticProfile\";\r\nimport {userAPI} from \"../../api/api\";\r\nimport ScreamsItem from \"../Home/ScreamsItem/ScreamsItem\";\r\n\r\nclass User extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            profile: null,\r\n            screamIdParam: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        debugger;\r\n        const handle = this.props.match.params.handle;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if(screamId) {\r\n            this.setState({\r\n                screamIdParam: screamId\r\n            })\r\n        }\r\n\r\n        this.props.getUserData(handle);\r\n        userAPI.getUserData(handle)\r\n            .then(res => {\r\n                this.setState({\r\n                    profile: res.data.user\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        const { screams } = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        return (\r\n            <Grid container spacing={4}>\r\n                {this.props.loading ?\r\n                    (<CircularProgress size={100} className={s.progress}/>)\r\n                    :\r\n                    (<>\r\n                        <Grid item sm={8} xs={12}>\r\n                            { screams === null ? (\r\n                                <p>No screams from this user</p>\r\n                            ) : !screamIdParam ? (\r\n                                screams.map(scream => <ScreamsItem\r\n                                    key={scream.screamId}\r\n                                    scream={scream}\r\n                                />)\r\n                            ) : (\r\n                                screams.map(scream => {\r\n                                   if(scream.screamId !== screamIdParam) {\r\n                                       return <ScreamsItem\r\n                                               key={scream.screamId}\r\n                                               scream={scream}\r\n                                       />\r\n                                   } else return <ScreamsItem\r\n                                       key={scream.screamId}\r\n                                       scream={scream}\r\n                                       openDialog\r\n                                   />\r\n                                })\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item sm={4} xs={12}>\r\n                            {this.state.profile === null ?\r\n                                (<CircularProgress size={100} className={s.progress}/>)\r\n                                :\r\n                                (<StaticProfile profile={this.state.profile} />)\r\n                            }\r\n                        </Grid>\r\n                    </>)\r\n                }\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state.data,\r\n    loading: state.ui.loading\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserData})(User);","import './App.css';\nimport { Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/Signup/Signup\";\nimport Login from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport HomeContainer from \"./components/Home/HomeContainer\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthRoute from \"./components/common/AuthRoute\";\nimport {getUserData, logoutUser} from \"./redux/actions/userAction\";\nimport store from \"./redux/store\";\nimport {SET_AUTHENTICATED} from \"./redux/types\";\nimport axios from \"axios\";\nimport User from \"./components/User/User\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\nimport AppIcon from \"./assets/images/icon.png\";\nimport React from \"react\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#007ea8',\n            contrastText: '#fff'\n        }\n    }\n})\n\nif(window.location.pathname === '/social_app/') {\n    window.location.href = '/social_app/login';\n}\n\nconst token = localStorage.FBIdToken;\nif(token) {\n    const decodedToken = jwtDecode(token);\n    if(decodedToken.exp * 1000 < Date.now()) {\n        store.dispatch(logoutUser())\n        window.location.href = '/social_app/login';\n    } else {\n        store.dispatch({ type: SET_AUTHENTICATED });\n        axios.defaults.headers.common['Authorization'] = token;\n        store.dispatch(getUserData());\n    }\n}\n\naxios.defaults.baseURL = 'https://europe-west1-socialapp-8233c.cloudfunctions.net/api';\n\nconst App = props => {\n\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n            <Navbar/>\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path='/social_app/' component={HomeContainer}/>\n                    <AuthRoute exact path='/social_app/login' component={Login}/>\n                    <AuthRoute exact path='/social_app/signup' component={Signup}/>\n                    <Route exact path='/social_app/user/:handle' component={User}/>\n                    <Route exact path='/social_app/user/:handle/scream/:screamId' component={User}/>\n                </Switch>\n                <img src={AppIcon} alt=\"app icon\" className=\"lavalamp\" />\n            </div>\n        </div>\n    </MuiThemeProvider>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userImg\":\"ScreamsItem_userImg__3tcXV\",\"card\":\"ScreamsItem_card__3o97O\",\"content\":\"ScreamsItem_content__D2rg2\",\"screamBody\":\"ScreamsItem_screamBody__36CFO\",\"delete\":\"ScreamsItem_delete__3Inku\",\"screamBtns\":\"ScreamsItem_screamBtns__1MytA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Home_progress__3bqYu\"};"],"sourceRoot":""}